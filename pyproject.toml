[tool.poetry]
name = "libsimba"
version = "0.1.16"
description = "libsimba is a library simplifying the use of SIMBAChain Blocks APIs."
authors = [
    "SIMBA Chain Inc."
]

packages = [
    { include = "libsimba" }
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
httpx = "0.23.0"
pydantic = { extras = ["dotenv"], version = "1.10.2" }

[tool.poetry.dev-dependencies]
Sphinx = "5.2.2"
sphinx-rtd-theme = "^1.0.0"
twine = "^4.0.1"
myst-parser = "0.18.1"
pytest = "7.1.3"
respx = "0.20.0"
black = "22.8.0"
isort = "5.10.1"
taskipy = "1.10.3"
coverage = "6.4.4"

[tool.isort]
profile="black"
atomic=true
include_trailing_comma=true
lines_after_imports=2
lines_between_types=1
use_parentheses=true
src_paths=["config", "tests"]
skip_glob="*/setup.py"
filter_files=true
known_first_party="poetry"

[tool.pytest.ini_options]
markers = [
    "unit: do not require an external service",
]

[tool.taskipy.tasks]
isort = { cmd = "isort libsimba", help = "Sort imports" }
format = { cmd = "black libsimba", help = "Run black code formatting" }
tests = { cmd = "pytest --pyargs tests -m unit --junitxml=junit.xml --verbose", help = "Run tests" }
live_async = { cmd = "pytest --pyargs tests/test_live_async.py --junitxml=junit.xml --verbose", help = "Run live async tests" }
live_sync = { cmd = "pytest --pyargs tests/test_live_sync.py --junitxml=junit.xml --verbose", help = "Run live async tests" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

